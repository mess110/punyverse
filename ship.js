// Generated by CoffeeScript 1.9.0
var Ship,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

Ship = (function(_super) {
  __extends(Ship, _super);

  function Ship(name, model) {
    this.name = name;
    this.mesh = new THREE.Object3D();
    this.ship = model;
    this.ship.rotation.y = -0.15 + Math.PI;
    this.fireLeft = true;
    this.acceleration = 0;
    this.mesh.add(this.ship);
    this.leftDetonation = new THREEx.SpaceShips.Detonation;
    this.leftDetonation.position.x = -0.55;
    this.leftDetonation.position.z = 0.57;
    this.mesh.add(this.leftDetonation);
    this.rightDetonation = new THREEx.SpaceShips.Detonation;
    this.rightDetonation.position.x = 0.55;
    this.rightDetonation.position.z = 0.57;
    this.mesh.add(this.rightDetonation);
  }

  Ship.prototype.spawnBullet = function() {
    var a, b, bullet, projectile;
    projectile = new THREEx.SpaceShips.Shoot();
    bullet = new THREE.Object3D();
    a = this.mesh.position.clone();
    bullet.position.set(a.x, a.y, a.z);
    if (this.fireLeft) {
      bullet.position.x += 0.2;
    } else {
      bullet.position.x -= 0.2;
    }
    this.fireLeft = !this.fireLeft;
    b = this.mesh.rotation.clone();
    bullet.rotation.set(b.x, b.y, b.z);
    return bullet.add(projectile);
  };

  return Ship;

})(BaseModel);
